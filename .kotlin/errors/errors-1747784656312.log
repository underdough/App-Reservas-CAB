kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/2825817kotlin/AppReservasCAB/app/src/main/java/com/amkj/appreservascab/MainActivity.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:ContrasenaVisible visibility:public modality:FINAL <> ($this:com.amkj.appreservascab.MainActivity) returnType:kotlin.Unit
  annotations:
    Composable
  $this: VALUE_PARAMETER name:<this> type:com.amkj.appreservascab.MainActivity
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:password$delegate type:androidx.compose.runtime.MutableState<kotlin.String> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.String>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun ContrasenaVisible$lambda$3 (): androidx.compose.runtime.MutableState<kotlin.String> declared in com.amkj.appreservascab.MainActivity' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:verContra$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.Boolean>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun ContrasenaVisible$lambda$6 (): androidx.compose.runtime.MutableState<kotlin.Boolean> declared in com.amkj.appreservascab.MainActivity' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=INLINE_LAMBDA reflectionTarget=null
    BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
      VAR IR_TEMPORARY_VARIABLE name:tmp0_value type:kotlin.String [val]
        CALL 'private final fun ContrasenaVisible$lambda$4 ($password$delegate: androidx.compose.runtime.MutableState<kotlin.String>): kotlin.String declared in com.amkj.appreservascab.MainActivity' type=kotlin.String origin=GET_LOCAL_PROPERTY
          $password$delegate: GET_VAR 'val password$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.amkj.appreservascab.MainActivity.ContrasenaVisible' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp1_visualTransformation type:androidx.compose.ui.text.input.VisualTransformation [val]
        WHEN type=androidx.compose.ui.text.input.VisualTransformation origin=IF
          BRANCH
            if: CALL 'private final fun ContrasenaVisible$lambda$7 ($verContra$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Boolean declared in com.amkj.appreservascab.MainActivity' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
              $verContra$delegate: GET_VAR 'val verContra$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.amkj.appreservascab.MainActivity.ContrasenaVisible' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
            then: CALL 'public final fun <get-None> (): androidx.compose.ui.text.input.VisualTransformation declared in androidx.compose.ui.text.input.VisualTransformation.Companion' type=androidx.compose.ui.text.input.VisualTransformation origin=GET_PROPERTY
              $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.text.input.VisualTransformation.Companion visibility:public [final,static] declared in androidx.compose.ui.text.input.VisualTransformation' type=androidx.compose.ui.text.input.VisualTransformation.Companion origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONSTRUCTOR_CALL 'public constructor <init> (mask: kotlin.Char, $mask0: kotlin.Int, $marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in androidx.compose.ui.text.input.PasswordVisualTransformation' type=androidx.compose.ui.text.input.PasswordVisualTransformation origin=DEFAULT_DISPATCH_CALL
              mask: COMPOSITE type=kotlin.Char origin=DEFAULT_VALUE
                CONST Char type=kotlin.Char value='\u0000'
              $mask0: CONST Int type=kotlin.Int value=1
              $marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
      VAR IR_TEMPORARY_VARIABLE name:tmp2_modifier type:androidx.compose.ui.Modifier [val]
        CALL 'public final fun fillMaxWidth$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: CALL 'public final fun padding-3ABfNKs (all: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
            $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
            all: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
              $receiver: CONST Int type=kotlin.Int value=16
          fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
      CALL 'public final fun OutlinedTextField$default (value: kotlin.String, onValueChange: kotlin.Function1<kotlin.String, kotlin.Unit>, modifier: androidx.compose.ui.Modifier?, enabled: kotlin.Boolean, readOnly: kotlin.Boolean, textStyle: androidx.compose.ui.text.TextStyle?, label: @[Composable] kotlin.Function0<kotlin.Unit>?, placeholder: @[Composable] kotlin.Function0<kotlin.Unit>?, leadingIcon: @[Composable] kotlin.Function0<kotlin.Unit>?, trailingIcon: @[Composable] kotlin.Function0<kotlin.Unit>?, prefix: @[Composable] kotlin.Function0<kotlin.Unit>?, suffix: @[Composable] kotlin.Function0<kotlin.Unit>?, supportingText: @[Composable] kotlin.Function0<kotlin.Unit>?, isError: kotlin.Boolean, visualTransformation: androidx.compose.ui.text.input.VisualTransformation?, keyboardOptions: androidx.compose.foundation.text.KeyboardOptions?, keyboardActions: androidx.compose.foundation.text.KeyboardActions?, singleLine: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource?, shape: androidx.compose.ui.graphics.Shape?, colors: androidx.compose.material3.TextFieldColors?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.OutlinedTextFieldKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
        value: GET_VAR 'val tmp0_value: kotlin.String [val] declared in com.amkj.appreservascab.MainActivity.ContrasenaVisible' type=kotlin.String origin=null
        onValueChange: BLOCK type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=null
            <T>: kotlin.Function1<kotlin.String, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.MutableState<kotlin.String>): kotlin.Function1<kotlin.String, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=null
              p0: GET_VAR 'val password$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.amkj.appreservascab.MainActivity.ContrasenaVisible' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun ContrasenaVisible$lambda$9 ($password$delegate: androidx.compose.runtime.MutableState<kotlin.String>, it: kotlin.String): kotlin.Unit? declared in com.amkj.appreservascab.MainActivity' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: kotlin.String): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        modifier: GET_VAR 'val tmp2_modifier: androidx.compose.ui.Modifier [val] declared in com.amkj.appreservascab.MainActivity.ContrasenaVisible' type=androidx.compose.ui.Modifier origin=null
        enabled: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
          CONST Boolean type=kotlin.Boolean value=false
        readOnly: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
          CONST Boolean type=kotlin.Boolean value=false
        textStyle: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.text.TextStyle? value=null
        label: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
            <T>: kotlin.Function0<kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun ContrasenaVisible$lambda$10 (): kotlin.Unit? declared in com.amkj.appreservascab.MainActivity' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        placeholder: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
            <T>: kotlin.Function0<kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun ContrasenaVisible$lambda$11 (): kotlin.Unit? declared in com.amkj.appreservascab.MainActivity' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        leadingIcon: COMPOSITE type=@[Composable] kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=@[Composable] kotlin.Function0<kotlin.Unit>? value=null
        trailingIcon: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
            <T>: kotlin.Function0<kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
              p0: GET_VAR 'val verContra$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.amkj.appreservascab.MainActivity.ContrasenaVisible' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun ContrasenaVisible$lambda$14 ($verContra$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Unit? declared in com.amkj.appreservascab.MainActivity' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        prefix: COMPOSITE type=@[Composable] kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=@[Composable] kotlin.Function0<kotlin.Unit>? value=null
        suffix: COMPOSITE type=@[Composable] kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=@[Composable] kotlin.Function0<kotlin.Unit>? value=null
        supportingText: COMPOSITE type=@[Composable] kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=@[Composable] kotlin.Function0<kotlin.Unit>? value=null
        isError: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
          CONST Boolean type=kotlin.Boolean value=false
        visualTransformation: GET_VAR 'val tmp1_visualTransformation: androidx.compose.ui.text.input.VisualTransformation [val] declared in com.amkj.appreservascab.MainActivity.ContrasenaVisible' type=androidx.compose.ui.text.input.VisualTransformation origin=null
        keyboardOptions: COMPOSITE type=androidx.compose.foundation.text.KeyboardOptions? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.foundation.text.KeyboardOptions? value=null
        keyboardActions: COMPOSITE type=androidx.compose.foundation.text.KeyboardActions? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.foundation.text.KeyboardActions? value=null
        singleLine: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
          CONST Boolean type=kotlin.Boolean value=false
        maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
          CONST Int type=kotlin.Int value=0
        minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
          CONST Int type=kotlin.Int value=0
        interactionSource: COMPOSITE type=androidx.compose.foundation.interaction.MutableInteractionSource? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.foundation.interaction.MutableInteractionSource? value=null
        shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.graphics.Shape? value=null
        colors: COMPOSITE type=androidx.compose.material3.TextFieldColors? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.material3.TextFieldColors? value=null
        $mask0: CONST Int type=kotlin.Int value=8371512
        $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


